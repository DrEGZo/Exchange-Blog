service cloud.firestore {
  match /databases/{database}/documents {
  
    match /Blogentries/{blogid} {
      allow get: if isLoggedIn() && hasViewPermissions(request.auth.uid);
    }
    
    match /Media/{mediaid} {
    	allow get: if isLoggedIn() && hasViewPermissions(request.auth.uid);
    }
    
    match /Comments/{commentid} {
    	allow get: if hasParentViewPermissions(request.auth.uid);
    }
    
    match /StatusUpdates/{statusid} {
    	allow get: if isLoggedIn() && hasViewPermissions(request.auth.uid);
    }
    
    
    //Functions
    
    function isLoggedIn() {
    	return request.auth != null;
    }
    
    function getUserRank(user) {
    	return get(/databases/$(database)/documents/User/$(user)).data.Rank;
    }
     
    function hasViewPermissions(user) {
    	return resource.data.Visibility.hasAny([getUserRank(user)]);
    }
    
    function hasParentViewPermissions(user) {
    	return hasObjectViewPermissions(user,resource.data.source.typ,resource.data.source.id)
    }
    
    function hasObjectViewPermissions(user,typ,id) {
    	return get(/databases/$(database)/documents/$(typ)/$(id)).data.Visibility.hasAny([getUserRank(user)]);
    }
    
  }
}